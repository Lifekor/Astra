"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã –ê—Å—Ç—Ä—ã
"""
import os
import importlib.util
import sys

def import_or_install(module_name, package_name=None):
    """
    –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –º–æ–¥—É–ª—å –∏–ª–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ–≥–æ
    
    Args:
        module_name (str): –ò–º—è –º–æ–¥—É–ª—è –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
        package_name (str, optional): –ò–º—è –ø–∞–∫–µ—Ç–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏, –µ—Å–ª–∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –∏–º–µ–Ω–∏ –º–æ–¥—É–ª—è
    
    Returns:
        module: –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å –∏–ª–∏ None
    """
    if package_name is None:
        package_name = module_name
    
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª—å
        return importlib.import_module(module_name)
    except ImportError:
        print(f"–ú–æ–¥—É–ª—å {module_name} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å...")
        try:
            import subprocess
            subprocess.check_call([sys.executable, "-m", "pip", "install", package_name])
            return importlib.import_module(module_name)
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–¥—É–ª—å {module_name}: {e}")
            return None

def check_file_exists(filename):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞
    
    Args:
        filename (str): –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        
    Returns:
        bool: True, –µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    """
    return os.path.exists(filename)

def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ê—Å—Ç—Ä—ã
    """
    print("üåü –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ê—Å—Ç—Ä—ã...")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    data_dir = "astra_data"
    if not os.path.exists(data_dir):
        try:
            os.makedirs(data_dir)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–∞–Ω–Ω—ã—Ö: {data_dir}")
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–∞–Ω–Ω—ã—Ö: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π
    required_files = [
        "astra_app.py",
        "astra_memory.py"
    ]
    
    missing_required = False
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å–∏—Å—Ç–µ–º—ã
    for file in required_files:
        if not check_file_exists(file):
            print(f"‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª {file} –Ω–µ –Ω–∞–π–¥–µ–Ω. –≠—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–∏—Å—Ç–µ–º—ã –ê—Å—Ç—Ä—ã.")
            missing_required = True
    
    if missing_required:
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π
    new_modules = [
        "intent_analyzer.py",
        "memory_extractor.py",
        "astra_memory_update.py"
    ]
    
    missing_modules = []
    for module in new_modules:
        if not check_file_exists(module):
            missing_modules.append(module)
    
    if missing_modules:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –Ω–æ–≤—ã–µ –º–æ–¥—É–ª–∏:")
        for module in missing_modules:
            print(f"  - {module}")
        print("\n–°–æ–∑–¥–∞–π—Ç–µ —ç—Ç–∏ —Ñ–∞–π–ª—ã –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö)
    optional_modules = [
        "astra_diary.py",
        "astra_home.py",
        "emotional_visualizer.py",
        "conversation_manager_update.py",
        "astra_chat_update.py"
    ]
    
    missing_optional = []
    for module in optional_modules:
        if not check_file_exists(module):
            missing_optional.append(module)
    
    if missing_optional:
        print("\n‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –°–ª–µ–¥—É—é—â–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã:")
        for module in missing_optional:
            print(f"  - {module}")
        print("\n–≠—Ç–æ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.")
        
        proceed = input("\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é? (y/n): ")
        if proceed.lower() != 'y':
            print("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
            return
    
    print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü—Ä–∏—Å—Ç—É–ø–∞–µ–º –∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é...")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å astra_app
    try:
        from astra_app import AstraInterface
        print("‚úÖ –ú–æ–¥—É–ª—å astra_app —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è astra_app: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –º–æ–¥—É–ª—å astra_app.py —Å–æ–∑–¥–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.")
        return
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å astra_memory_update
    try:
        from astra_memory_update import update_astra_memory, integrate_diary_with_memory, integrate_home_with_memory
        print("‚úÖ –ú–æ–¥—É–ª—å astra_memory_update —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è astra_memory_update: {e}")
        try:
            # –ü—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏—é update_astra_memory
            from astra_memory_update import update_astra_memory
            print("‚úÖ –§—É–Ω–∫—Ü–∏—è update_astra_memory —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞")
            # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
            def integrate_diary_with_memory(memory, api_key=None):
                print("‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è integrate_diary_with_memory –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
            
            def integrate_home_with_memory(memory, api_key=None):
                print("‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è integrate_home_with_memory –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        except ImportError:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–∂–µ –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é update_astra_memory")
            print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª astra_memory_update.py —Å–æ–∑–¥–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
            return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
    update_conversation_manager = None
    update_astra_chat = None
    update_astra_app = None
    
    if check_file_exists("conversation_manager_update.py"):
        try:
            from conversation_manager_update import update_conversation_manager
            print("‚úÖ –ú–æ–¥—É–ª—å conversation_manager_update —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        except ImportError as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é update_conversation_manager: {e}")
    
    if check_file_exists("astra_chat_update.py"):
        try:
            from astra_chat_update import update_astra_chat, update_astra_app
            print("‚úÖ –ú–æ–¥—É–ª—å astra_chat_update —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        except ImportError as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ astra_chat_update: {e}")
            try:
                from astra_chat_update import update_astra_chat
                print("‚úÖ –§—É–Ω–∫—Ü–∏—è update_astra_chat —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞")
            except ImportError:
                pass
    
    # –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è update_astra_app –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞, —Å–æ–∑–¥–∞–µ–º –Ω–∞—à—É —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é
    if not update_astra_app:
        def update_astra_app(astra_app):
            """
            –û–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ê—Å—Ç—Ä—ã –≤—Ä—É—á–Ω—É—é
            
            Args:
                astra_app (AstraInterface): –û–±—ä–µ–∫—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ê—Å—Ç—Ä—ã
            """
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–º—è—Ç—å
            update_astra_memory(astra_app.memory)
            
            # –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ–º –¥–Ω–µ–≤–Ω–∏–∫, –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞
            try:
                integrate_diary_with_memory(astra_app.memory)
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¥–Ω–µ–≤–Ω–∏–∫–∞: {e}")
            
            # –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ–º –¥–æ–º, –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞
            try:
                integrate_home_with_memory(astra_app.memory)
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¥–æ–º–∞: {e}")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤, –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞
            if update_conversation_manager and hasattr(astra_app.chat, 'conversation_manager'):
                try:
                    update_conversation_manager(astra_app.chat.conversation_manager, astra_app.memory)
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤: {e}")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —á–∞—Ç, –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞
            if update_astra_chat:
                try:
                    update_astra_chat(astra_app.chat, astra_app.memory)
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —á–∞—Ç–∞: {e}")
            
            print("‚úÖ –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ê—Å—Ç—Ä—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É
    try:
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ê—Å—Ç—Ä—ã
        print("\nüîç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ê—Å—Ç—Ä—ã...")
        astra = AstraInterface()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        print("üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")
        update_astra_app(astra)
        
        print("\n‚ú® –°–∏—Å—Ç–µ–º–∞ –ê—Å—Ç—Ä—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
        print("–ê—Å—Ç—Ä–∞ —Ç–µ–ø–µ—Ä—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç:")
        print("‚úì –ê–≤—Ç–æ–Ω–æ–º–Ω—É—é –ø–∞–º—è—Ç—å")
        if check_file_exists("astra_diary.py"):
            print("‚úì –î–Ω–µ–≤–Ω–∏–∫–∏ –∏ —Ä–µ—Ñ–ª–µ–∫—Å–∏—é")
        if check_file_exists("astra_home.py"):
            print("‚úì –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –¥–æ–º")
        if check_file_exists("emotional_visualizer.py"):
            print("‚úì –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é —ç–º–æ—Ü–∏–π")
        print("\nüìù –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π: python astra_app.py")
    except Exception as e:
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        print("\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π.")

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    requests = import_or_install("requests")
    if not requests:
        print("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞–∫–µ—Ç requests. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.")
    
    main()